/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useSpring, a } from '@react-spring/three';

// Chest sound

import chestOpenSound from '../../assets/sound/open-chest.mp3';
import chestCloseSound from '../../assets/sound/close-chest.mp3';
const openChestAudio = new Audio(chestOpenSound);
const closeChestAudio = new Audio(chestCloseSound);

export default function Model(props) {
    const group = useRef();
    const { nodes, materials } = useGLTF('../../../coffre-minecraft.glb');

    console.log(props);

    // Open function
    const handleOpen = () => {
        props.setOpen(!props.open);
        console.log('open');
        openChestAudio.volume = 0.3;
        closeChestAudio.volume = 0.3;

        !props.open ? openChestAudio.play() : closeChestAudio.play();
    };

    const openChestAnimation = useSpring({
        rotation: props.open ? [0, 0, 0] : [1.61, 0, 0],
        position: props.open ? [0, -1.5, 0] : [0, 0, 0],
    });

    const getSpecs = {
        rotation: props.open ? [0, 0, 0] : [1.61, 0, 0],
        position: props.open ? [0, -1.5, 0] : [0, 0, 0],
    };

    return (
        <group onClick={handleOpen} ref={group} {...props} dispose={null}>
            <a.group name="Armature" position={[0, -0.99, 0]}>
                <primitive object={nodes.Bone} />
                <a.primitive rotation={getSpecs.rotation} object={nodes.Bone001} />
                <skinnedMesh
                    castShadow
                    geometry={nodes.Cube.geometry}
                    material={materials.Material}
                    skeleton={nodes.Cube.skeleton}
                />
            </a.group>
        </group>
    );
}

useGLTF.preload('../../../coffre-minecraft.glb');
